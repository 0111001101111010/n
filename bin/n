#!/usr/bin/env sh

# Library version

VERSION="0.0.1"
PREFIX=${PREFIX-/usr/local}
N_PREFIX=${N_PREFIX-/usr/local}
VERSIONS_DIR=$N_PREFIX/n/versions

# setup

test -d $VERSIONS_DIR || mkdir -p $VERSIONS_DIR

# curl / wget support

GET=

# wget support
which wget > /dev/null && GET="wget -q -O-"

# curl support
which curl > /dev/null && GET="curl -# -L"

# Ensure we have curl or wget

test -z "$GET" && abort "curl or wget required"

#
# Log the given <msg ...>
#

log() {
  echo "\033[90m...\033[0m $@"
}

#
# Exit with the given <msg ...>
#

abort() {
  echo "Error: $@" && exit 1
}

#
# Output usage information.
#

display_help() {
  cat <<-help

  Usage: n [options] <version> [config]

  Commands:

    n               Output versions installed
    n <version>     Install and/or use node <version>

  Options:

    -V, --version   Output current version of n
    -h, --help      Display help information

help
  exit 0
}

#
# Output n version.
#

display_n_version() {
  echo $VERSION && exit 0
}

#
# Check for installed version, and populate $version
#

check_current_version() {
  if test `which node`; then
    installed=`node --version`
    installed=${installed##*v}
  fi  
}

#
# Display current node --version
# and others installed.
#

display_versions() {
  check_current_version
  for file in $VERSIONS_DIR/*; do
    local version=${file##*/}
    if test "$version" = "$installed"; then
      echo "  \033[32m*\033[0m $version"
    else
      echo "    $version"
    fi
  done
}

#
# Install node <version> [config ...]
#

install_node() {
  local version=$1; shift
  local config=$@
  check_current_version

  # remove "v"
  if test "${version:0:1}" = "v"; then
    version=${installed##*v}
  fi 

  # already active
  test "$version" = "$installed" && return

  # installed
  local dir=$VERSIONS_DIR/$version
  if test -d $dir; then
    cd $dir \
      && cp -fr $dir/include/node $PREFIX/include \
      && cp -f $dir/bin/node $PREFIX/bin/node
  # install
  else
    local dir="node-v$version"
    cd $N_PREFIX/n \
      && $GET "http://nodejs.org/dist/node-v$version.tar.gz" \
      > "$dir.tar.gz" \
      && tar -zxf "$dir.tar.gz" \
      && cd $dir \
      && ./configure --prefix $VERSIONS_DIR/$version $config\
      && make install \
      && cd .. \
      && cleanup $version \
      && n $version
  fi
}

#
# Cleanup after the given <version>
#

cleanup() {
  local version=$1
  local dir="node-v$version"

  if test -d $dir; then
    log "removing source"
    rm -fr $dir
  fi
  
  if test -f "$dir.tar.gz"; then
    log "removing tarball"
    rm -fr "$dir.tar.gz"
  fi
}

# Handle arguments

if test $# -eq 0; then
  display_versions
else
  while test $# -ne 0; do
    case $1 in
      -V|--version) display_n_version ;;
      -h|--help) display_help ;;
      *) install_node $@; exit ;;
    esac
    shift
  done
fi